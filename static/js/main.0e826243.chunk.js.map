{"version":3,"sources":["logo.svg","Appointment.js","Tile.js","App.js","reportWebVitals.js","index.js"],"names":["Appointment","props","useState","Date","startDate","setStartDate","isOpen","setIsFormOpen","isBooked","setIsBooked","id","type","selected","onChange","date","rows","cols","onClick","a","payload","name","document","getElementById","value","msg","tel","time","console","log","fetch","method","body","JSON","stringify","headers","response","json","doSMS","sendSMS","Tile","view","setView","className","area","price","alt","src","image","App","server","houses","fillHouses","useEffect","fetchHouses","map","h","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e826243.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Appointment(props) {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [isOpen, setIsFormOpen] = useState(false);\r\n    const [isBooked, setIsBooked] = useState(false);\r\n    const sendSMS = () => {\r\n        async function doSMS() {\r\n            let payload={\r\n                id:props.id,\r\n                name:document.getElementById(\"name\").value,\r\n                msg:document.getElementById(\"msg\").value,\r\n                tel:document.getElementById(\"tel\").value,\r\n                date: document.getElementById(\"date\").value,\r\n                time: document.getElementById(\"time\").value\r\n            }\r\n            console.log (payload)\r\n            let response = await fetch(\"http://localhost:3001/sms\", {\r\n                method: \"POST\", body: JSON.stringify(payload), headers: {\r\n                     'Accept': 'application/json', 'Content-Type': 'application/json' \r\n                }                \r\n            })\r\n            let result = await response.json()\r\n        }\r\n        doSMS()\r\n    }\r\n    if (isOpen) {\r\n        return (\r\n            <div>\r\n                <label>Name:</label><input id='name' type='text'></input><br />\r\n                <label>Preferred date:</label><DatePicker id='date' selected={startDate} onChange={date => setStartDate(date)} /><br />\r\n                <label>Preferred time:</label><input id='time' type='text'></input><br />\r\n                <label>Contact email:</label><input id='email' type='text'></input><br />\r\n                <label>Contact phone:</label><input id='tel' type='text'></input><br />\r\n                <label>Notes/comments:</label><br /><textarea id='msg' rows=\"5\" cols=\"40\"></textarea><br />\r\n                <button onClick={() => { setIsFormOpen(false); setIsBooked(true); sendSMS()}}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button onClick={() => setIsFormOpen(true)}>{isBooked ? \"Booked\" : \"Request viewing\"}</button>\r\n    )\r\n}\r\nexport default Appointment;\r\n\r\n\r\n// Adam's code version (\"reactive\")\r\n// more React code \r\n\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import React, { useState, useEffect } from \"react\";\r\n// function Appointment({index}) {\r\n//   const [booking, setBooking] = useState({\r\n//     isBooked: false,\r\n//     isOpen: false,\r\n//     msg: \"\",\r\n//     tel: \"\",\r\n//     startDate: new Date(),\r\n//     sendSMS: false,\r\n//   });\r\n//   useEffect(() => {\r\n//     if (booking.sendSMS) {\r\n//       async function doSMS() {\r\n//         let payload = { msg: booking.msg, tel: booking.tel };\r\n//         console.log(payload);\r\n//         let response = await fetch(\"http://localhost:3001/sms\", {\r\n//           method: \"POST\",\r\n//           body: JSON.stringify(payload),\r\n//           headers: {\r\n//             Accept: \"application/json\",\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         });\r\n//         let result = await response.json();\r\n//         setBooking((prevState) => ({ ...prevState, sendSMS: false }));\r\n//       }\r\n//       doSMS();\r\n//     } else {\r\n//       console.log(booking);\r\n//     }\r\n//   }, [booking]);\r\n//   return booking.isOpen ? (\r\n//     <div >\r\n//       <label>Preferred date:</label>\r\n//       <DatePicker\r\n//         selected={booking.startDate}\r\n//         onChange={(date) => setBooking((prevState) => ({ ...prevState, startDate: date }))}\r\n//       />\r\n//       <br />\r\n//       <label>Preferred time:</label>\r\n//       <input  type=\"text\"></input>\r\n//       <br />\r\n//       <label>Contact email:</label>\r\n//       <input  type=\"text\"></input>\r\n//       <br />\r\n//       <label>Contact phone:</label>\r\n//       <input       \r\n//         type=\"text\"\r\n//         onChange={(e) => setBooking((prevState) => ({ ...prevState, tel: e.target.value }))}\r\n//       ></input>\r\n//       <br />\r\n//       <label>Notes/comments:</label>\r\n//       <br />\r\n//       <textarea      \r\n//         rows=\"5\"\r\n//         cols=\"40\" onChange={(e) => setBooking((prevState) => ({ ...prevState, msg: e.target.value }))}\r\n//       ></textarea>\r\n//       <br />\r\n//       <button\r\n//         onClick={() => setBooking((prevState) => ({ ...prevState, isOpen: false, isBooked: true, sendSMS: true }))}\r\n//       >\r\n//         Submit\r\n//       </button>\r\n//     </div>\r\n//   ) : (\r\n//     <button\r\n//       onClick={() => setBooking((prevState) => ({ ...prevState, isOpen: true }))}\r\n//       disabled={booking.isBooked ? true : false}\r\n//     >\r\n//       {booking.isBooked ? \"Booked\" : \"Request viewing\"}\r\n//     </button>\r\n//   );\r\n// }\r\n// export default Appointment;","import Appointment from './Appointment.js';\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Tile(props) {\r\n  const [view, setView] = useState(true);\r\n  if (view) {\r\n    return (\r\n      <div className=\"tile\">\r\n        <h1>\r\n         {props.name} {props.area} {props.price} {props.type}\r\n        </h1>\r\n        <img alt=\"\" src={props.image} />\r\n        <Appointment id={props.id}/>\r\n        <button\r\n          onClick={() => {\r\n            setView(false);\r\n          }}\r\n        >\r\n          Hide\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  return(\r\n    <button onClick={()=>{setView(true)}}>Show</button>\r\n  )\r\n}\r\nexport default Tile;\r\n\r\n\r\n\r\n\r\n\r\n","import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\";\n\nimport './App.css';\nimport Tile from './Tile.js';\n\nfunction App() {\n\n  // let houses=[]\n  let server=\"http://localhost:3001\"\n  const [houses, fillHouses] = useState([]);\n\n  // houses.push({price:27500,area:\"Handsworth\",type:\"Flat\",image:`https://media.rightmove.co.uk/dir/crop/10:9-16:9/108k/107051/78903606/107051_RS0730_IMG_11_0000_max_476x317.jpeg`})\n  // houses.push({price:1450000,area:\"Harbourne\",type:\"House\",image:`https://media.rightmove.co.uk/dir/crop/10:9-16:9/93k/92029/104484854/92029_581009_IMG_00_0000_max_476x317.jpeg`})\n  // houses.push({price:165000,area:\"Edgbaston\",type:\"Maisonette\",image:`https://media.rightmove.co.uk/dir/crop/10:9-16:9/73k/72455/97846952/72455_107VC_IMG_00_0000_max_476x317.jpg`})\n      \n  useEffect(()=>{\n    async function fetchHouses(){        \n        let response = await fetch(server + \"/houses\")      \n        fillHouses( await response.json()) \n  //      loaded(true) //invoking the 'loaded' 'setter' function will trigger a refresh of the component        \n    }\n    fetchHouses()\n  }    \n  ,[])\n\n  return (\n    <div className=\"App\">\n      \n\n      {houses.map( h =><Tile name={h.name} price={h.price} area={h.area} image={h.image} type={h.type} key={h.id} id={h.id}/>)}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}